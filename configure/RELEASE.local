# RELEASE.local
#
# Read definitions of:
#	EPICS_SITE_TOP
#	BASE_MODULE_VERSION
#	EPICS_MODULES 
# from one of the following options
-include $(TOP)/../../RELEASE_SITE
-include $(TOP)/RELEASE_SITE

# Check that EPICS_MODULES was defined in a RELEASE_SITE file
-include $(TOP)/../../RELEASE_SITE.check

# ==========================================================
# Define the version strings for all needed modules
# Use naming pattern:
#   FOO_MODULE_VERSION = R1.2
# so scripts can extract version strings
# Don't set your version to anything such as "test" that
# could match a directory name.
# ==========================================================
ASYN_MODULE_VERSION	= R4.35-0.0.2
CALC_MODULE_VERSION	= R3.7-1.0.1
MOTOR_MODULE_VERSION	= R6.9-ess-0.0.2
SSCAN_MODULE_VERSION	= R2.10.2-1.1.0
SEQ_MODULE_VERSION	= R2.2.4-1.2

# ==========================================================
# External Support module path definitions
#
# If any of these macros expand to a path which
# contains an "include" directory, that directory will be
# included in the compiler include path.
#
# If any of these macros expand to a path which
# contains a "lib/<arch>" directory, that directory will be
# included in the compiler link path for that architecture.
#
# If your build fails, look for these paths in your build output
# ==========================================================
ASYN		= $(EPICS_MODULES)/asyn/$(ASYN_MODULE_VERSION)
CALC		= $(EPICS_MODULES)/calc/$(CALC_MODULE_VERSION)
MOTOR		= $(EPICS_MODULES)/motor/$(MOTOR_MODULE_VERSION)
SEQ		= $(EPICS_MODULES)/seq/$(SEQ_MODULE_VERSION)
SSCAN		= $(EPICS_MODULES)/sscan/$(SSCAN_MODULE_VERSION)

# Set EPICS_BASE last so it appears last in the DB, DBD, INCLUDE, and LIB search paths
EPICS_BASE = $(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)

# Check for invalid or undefined EPICS_BASE
-include $(TOP)/../../EPICS_BASE.check

#MY_MODULES		= /reg/neh/home/bhill/git-wa-neh/modules

#MOTOR		= $(MY_MODULES)/motor-git

